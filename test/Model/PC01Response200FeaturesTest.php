<?php
/**
 * PC01Response200FeaturesTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client\Mirakl
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Mirakl Marketplace APIs
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: latest-release
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.12.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace OpenAPI\Client\Mirakl\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * PC01Response200FeaturesTest Class Doc Comment
 *
 * @category    Class
 * @description PC01Response200Features
 * @package     OpenAPI\Client\Mirakl
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class PC01Response200FeaturesTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "PC01Response200Features"
     */
    public function testPC01Response200Features()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "circularEconomyDataCollection"
     */
    public function testPropertyCircularEconomyDataCollection()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "competitivePricingTool"
     */
    public function testPropertyCompetitivePricingTool()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "directPaymentCustomerStore"
     */
    public function testPropertyDirectPaymentCustomerStore()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "disableSellerAlternativeCarrier"
     */
    public function testPropertyDisableSellerAlternativeCarrier()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kycStatusPerSeller"
     */
    public function testPropertyKycStatusPerSeller()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "leadTimeToShipBySellersEnabled"
     */
    public function testPropertyLeadTimeToShipBySellersEnabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "multiCurrency"
     */
    public function testPropertyMultiCurrency()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "noReplyNeeded"
     */
    public function testPropertyNoReplyNeeded()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "offerPricesDecimals"
     */
    public function testPropertyOfferPricesDecimals()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "operatorCsvDelimiter"
     */
    public function testPropertyOperatorCsvDelimiter()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "orderConditions"
     */
    public function testPropertyOrderConditions()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "orderTaxMode"
     */
    public function testPropertyOrderTaxMode()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "orderWorkflows"
     */
    public function testPropertyOrderWorkflows()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "paymentConfirmation"
     */
    public function testPropertyPaymentConfirmation()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "pricing"
     */
    public function testPropertyPricing()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "productDataValidationByChannel"
     */
    public function testPropertyProductDataValidationByChannel()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "shipment"
     */
    public function testPropertyShipment()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "shopTaxOptions"
     */
    public function testPropertyShopTaxOptions()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "taxCollection"
     */
    public function testPropertyTaxCollection()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "taxIdNumber"
     */
    public function testPropertyTaxIdNumber()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
