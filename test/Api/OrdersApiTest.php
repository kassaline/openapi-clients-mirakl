<?php
/**
 * OrdersApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client\Mirakl
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Mirakl Marketplace APIs
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: latest-release
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.12.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Mirakl\Test\Api;

use \OpenAPI\Client\Mirakl\Configuration;
use \OpenAPI\Client\Mirakl\ApiException;
use \OpenAPI\Client\Mirakl\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * OrdersApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client\Mirakl
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class OrdersApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for oR04
     *
     * Patch update orders.
     *
     */
    public function testOR04()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for oR07
     *
     * Update order line shipping origin.
     *
     */
    public function testOR07()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for oR11
     *
     * List orders with pagination.
     *
     */
    public function testOR11()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for oR13
     *
     * Export orders asynchronously.
     *
     */
    public function testOR13()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for oR14
     *
     * Get the status of an asynchronous order export..
     *
     */
    public function testOR14()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for oR21
     *
     * Accept or refuse order lines.
     *
     */
    public function testOR21()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for oR23
     *
     * Update carrier tracking information for a specific order.
     *
     */
    public function testOR23()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for oR24
     *
     * Validate the shipment of an order.
     *
     */
    public function testOR24()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for oR28
     *
     * Perform refunds on order lines.
     *
     */
    public function testOR28()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for oR29
     *
     * Perform a full cancelation of an order.
     *
     */
    public function testOR29()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for oR30
     *
     * Perform cancelations on order lines.
     *
     */
    public function testOR30()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for oR31
     *
     * Update the custom fields of an order and its order lines.
     *
     */
    public function testOR31()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for oR32
     *
     * Adjust order line.
     *
     */
    public function testOR32()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for oR51
     *
     * Get the evaluation of an order.
     *
     */
    public function testOR51()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for oR72
     *
     * Lists order's documents.
     *
     */
    public function testOR72()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for oR73
     *
     * Download one or multiple documents attached to one or multiple orders.
     *
     */
    public function testOR73()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for oR75
     *
     * List all the order taxes available on the platform.
     *
     */
    public function testOR75()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for oR76
     *
     * Delete an order document.
     *
     */
    public function testOR76()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
