<?php
/**
 * PlatformSettingsApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client\Mirakl
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Mirakl Marketplace APIs
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: latest-release
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.12.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Mirakl\Test\Api;

use \OpenAPI\Client\Mirakl\Configuration;
use \OpenAPI\Client\Mirakl\ApiException;
use \OpenAPI\Client\Mirakl\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * PlatformSettingsApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client\Mirakl
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class PlatformSettingsApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for aF01
     *
     * List all custom fields.
     *
     */
    public function testAF01()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for cH11
     *
     * List all enabled channels.
     *
     */
    public function testCH11()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for cUR01
     *
     * List currency codes and labels.
     *
     */
    public function testCUR01()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for dO01
     *
     * List all document types.
     *
     */
    public function testDO01()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for l01
     *
     * List locale codes and labels.
     *
     */
    public function testL01()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for oF61
     *
     * List offer conditions.
     *
     */
    public function testOF61()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for pC01
     *
     * List platform configurations.
     *
     */
    public function testPC01()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for rE01
     *
     * List reasons.
     *
     */
    public function testRE01()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sH11
     *
     * List all active shipping zones.
     *
     */
    public function testSH11()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sH12
     *
     * List all active shipping methods.
     *
     */
    public function testSH12()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sH21
     *
     * List all carriers.
     *
     */
    public function testSH21()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sH31
     *
     * List all logistic classes.
     *
     */
    public function testSH31()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for v01
     *
     * Health Check endpoint.
     *
     */
    public function testV01()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
